<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">
	
	<insert id="insert" parameterType="hashMap" useGeneratedKeys="true"
		keyProperty="UID">  
	    <![CDATA[
	    insert into Post
	    (PostID,PostCateGoryID,userName,title,Content,writer) 
	    values
	    (#{postID},#{postCategoryID},#{userName},#{title},#{content}, #{writer})
	]]>
	</insert>
	
	<select id="list" resultType="hashMap">
	<![CDATA[	
		SELECT PostID, PostCateGoryID, userName, title, Content, views, UpdateDate, modifyDate, writer
		FROM Post
		WHERE PostID ={postID}
		ORDER BY updateDate DESC
		LIMIT #{startRowIndex}, #{rowsPerPage} 
		]]>
	</select>	        
	
	<select id="listWithPage" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
		SELECT *
		FROM Post
		WHERE PostID > 0
		ORDER BY updateDate DESC
		LIMIT #{rowsPerPage} OFFSET #{startRowIndex}		
		]]>
	</select>
	
	<insert id="create" useGeneratedKeys="true" keyProperty="postID">
		<![CDATA[
			INSERT INTO Post( title, PostCateGoryID, Content,userName,itemID,UpdateDate) 
			VALUES ( #{title},#{postCategoryID},#{content},#{userName},#{itemID},#{updateDate})
		]]>	
	</insert>
	
	<select id="findById" resultType="com.example.test.POST.DTO.PostDTO">
	 <![CDATA[
		SELECT PostID as postID,PostCateGoryID as postCategoryID,userName,title,Content as content,suggestion,views,UpdateDate as updateDate,itemID
		FROM Post
		WHERE PostID=#{postId} 
	]]>
	</select>
	
	<update id="update">
		<![CDATA[
			UPDATE Post
			SET   title = #{title}
		     ,Content = #{content}
		     ,views = #{views}
		WHERE PostID = #{postID}
		]]>
	</update>
	
	<delete id="delete">
		<![CDATA[
		DELETE
		FROM Post
		WHERE PostID = #{postID}
		]]>
	</delete>
	
	<select id="searchByKeyword" resultType="hashmap">
		<![CDATA[
		SELECT *
		FROM Post
		WHERE PostID > 0
		  AND ( 
		  		  title LIKE CONCAT('%', #{keyword}, '%')
		  	   OR Content LIKE CONCAT('%', #{keyword}, '%')
		  	   OR writer LIKE CONCAT('%', #{keyword}, '%')
		  	  )
		ORDER BY updateDate DESC
		  ]]>      
	</select>
	
	<select id="searchByPage" resultType="hashmap">
		<![CDATA[
			SELECT @rownum := @rownum+1 AS PostId, P.*
			FROM (
   					 SELECT @rownum := :startRowIndex
					) AS tmp
			INNER JOIN Post P ON PostID > 0
			WHERE 
    			    title LIKE CONCAT('%', :keyword, '%')
    			OR Content LIKE CONCAT('%', :keyword, '%')
    			OR writer LIKE CONCAT('%', :keyword, '%')
			ORDER BY 
    				updateDate DESC
    				
			LIMIT #{startRowIndex}, #{rowsPerPage}
		]]>
	</select>
	
	<select id="totalCount" resultType="int">
		<![CDATA[
		SELECT COUNT(*) 
		FROM Post
		]]>
	</select>
	
	<select id="findByPostCategoryId" resultType="com.example.test.POST.DTO.PostDTO">
	 <![CDATA[
		SELECT *
		FROM Post
		WHERE PostCateGoryID = #{postCategoryID}
	]]>
	</select>
	
	<insert id="replyCreate" >
	<![CDATA[
		INSERT INTO PostAnswer ( postID, content, writer )
					VALUES ( #{postId}, #{content}, #{writer} )
	]]>				
	</insert>	
	
	<select id="replyList" resultType="hashmap">
	<![CDATA[
		SELECT * 
		FROM PostAnswer
		WHERE postID = #{postId}
		ORDER BY updateDate DESC
	]]>				 
	</select>

	<update id="replyUpdate" >
	<![CDATA[
		UPDATE PostAnswer
		SET   content = #{content}
		     ,writer = #{writer}
		WHERE answerID = #{answerId}
		]]>	
	</update>
	
	<delete id="replyDelete" parameterType="Int">
	<![CDATA[
		DELETE FROM PostAnswer
		WHERE answerID = #{answerId}
	]]>		
	</delete>
	
	
	<select id="titleCk" resultType="int">
		select count(*) from Post 
		where title = #{title};
	</select>
	
	
	
	
	


	



</mapper>