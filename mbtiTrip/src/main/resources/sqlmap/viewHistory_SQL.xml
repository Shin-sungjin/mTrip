<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="view">

	<insert id="insertItemTable" parameterType="hashMap"
		useGeneratedKeys="true">  
	<![CDATA[
		insert into iTemView (itemId)
		value (#itemId);
 	]]>
	</insert>
	<insert id="insertPostTable" parameterType="hashMap"
		useGeneratedKeys="true">  
			<![CDATA[
		insert into PostView (PostId)
		value (#{PostID});
 			]]>
	</insert>

	<insert id="viewItem" parameterType="hashMap"
		useGeneratedKeys="true">  
	<![CDATA[
		insert into userView (userName, itemID)
		value (#{userName}, #{itemId})
 	]]>
	</insert>
	<insert id="viewPO" parameterType="hashMap"
		useGeneratedKeys="true">  
		<![CDATA[
		insert into userView (userName, Postid)
		value (#{userName}, #{postid})
 	]]>
	</insert>


	<select id="ReturnRE"
		resultType="com.example.test.item.DTO.ItemDTO">
	<![CDATA[
		select distinct i.itemID, i.Type, i.mbti, i.tel ,i.itemName, i.location, i.userName, i.price, i.contents,  max(uv.viewDate) as viewDate
		from Item i 
		join (select userView.* 
		            from userView
		            order by viewDate desc) as uv
		on i.itemId = uv.itemId
		where i.Type = "replace" and uv.userName =#{userName}
		group by  i.itemID, i.Type, i.mbti, i.tel ,i.itemName, i.location, i.userName, i.price, i.contents
		order by  max(uv.viewDate) desc
		limit 5;
	]]>
	</select>


	<select id="ReturnAD"
		resultType="com.example.test.item.DTO.ItemDTO">
	<![CDATA[
		select distinct i.itemID, i.Type, i.mbti, i.tel ,i.itemName, i.location, i.userName, i.price, i.contents,  max(uv.viewDate) as viewDate
		from Item i 
		join (select userView.* 
		            from userView
		            order by viewDate desc) as uv
		on i.itemId = uv.itemId
		where i.Type = "adventure" and uv.userName =#{userName}
		group by  i.itemID, i.Type, i.mbti, i.tel ,i.itemName, i.location, i.userName, i.price, i.contents
		order by  max(uv.viewDate) desc
		limit 5;
	]]>
	</select>

	<select id="ReturnPO"
		resultType="com.example.test.POST.DTO.PostDTO">
	<![CDATA[
		select p.PostID, p.title, p.writer , p.Content , pv.viewRating, max(uv.viewDate) as viewDate
		from Post p
		join userView uv
		on p.PostID= uv.PostID
		join PostView pv
		on uv.PostID = pv.PostID
		where uv.userName = #{userName}
		group by  p.PostID, p.title, p.writer , p.Content
		order by max(uv.viewDate) desc
		limit 5 ;
	]]>
	</select>

	<select id="userCreatePost" resultType="hashMap">
	<![CDATA[
		select p.PostID, p.title , p.updateDate, p.PostCateGoryID, p.views, p.suggestion
		from `User` u
		join Post p
		on p.userName = u.userName
		where u.userName = #{userName}
	]]>
	</select>


	<select id="userCreateQnA" resultType="hashMap">
	<![CDATA[
	select q.QID ,q.Qname , q.updateDate,  q.contents, IF(isNULL(q.Answer), "N", "Y") as Answer
	from `User` u
	join QnA q
	on u.userName = q.userName
	where u.userName = #{userName}
	]]>
	</select>


	<select id="returnRatingItem" resultType="hashMap">
	<![CDATA[
		select i.itemID, i.itemName, iv.viewRating
		from iTemView iv
		join Item i
		on iv.itemId = i.itemID
		join User u 
		on u.userName = i.userName
		where i.userName = #{userName}
	]]>
	</select>


	<select id="userLikeMbti" parameterType="hashMap"
		resultType="hashMap">
		<![CDATA[
			SELECT 
		    mb.mbti, 
		    (SELECT 
		            COUNT(CASE WHEN i.Type = 'replace' THEN 1 END)
		            FROM userView uv
		            JOIN Item i ON uv.itemId = i.itemId
		            JOIN MBTi m ON i.mbti = m.mbtiId
		            WHERE m.mbtiId = mb.mbtiId
		            AND uv.userName = #{userName}
		        ) + 
		        (SELECT 
		            COUNT(CASE WHEN i.Type = 'adventure' THEN 1 END)
		            FROM userView uv
		            JOIN Item i ON uv.itemId = i.itemId
		            JOIN MBTi m ON i.mbti = m.mbtiId
		            WHERE m.mbtiId = mb.mbtiId
		            AND uv.userName = #{userName}
		        ) AS totalMBtiCnt
		FROM MBTi mb
		GROUP BY mb.mbtiId
		ORDER BY totalMBtiCnt DESC
		LIMIT 2;
		]]>
	</select>

	<select id="rutinALL" resultType="hashMap">
	<![CDATA[
		select a.itemName as replaceName, b.itemName as adventure,
		a.userName as replaceAdmin, b.userName as adventureAdmin,
	    a.price as replacePrice , b.price as adventurePrice,
	    a.location as replaceLocation, b.location as adventureLocation, 
	    a.tel as replaceTel , b.tel as adventureTel ,
	    a.contents as replaceContents, b.contents as adventureContents, 
	    a.ratingAvg as replaceRating, b.ratingAvg as adventureRatring
		from Item a
		inner join Item b 
		on a.mbti = b.mbti 
		join MBTi mb 
		on b.mbti = mb.mbtiId
		where mb.mbti = #{mbti} and a.Type = "replace" and( b.TYPE = "adventure"  or b.Type is null)
		order by rand();
	]]>
	</select>

	<select id="rutinAD" resultType="hashMap">
		<![CDATA[
		select
		    mb.mbti AS mbti, 
		    a.itemName,
		    a.location,
		    a.price,
		    a.ratingAvg
			from Item a
			join MBTi mb on a.mbti = mb.mbtiId
			where a.Type = "adventure" and mb.mbti = #{mbti}
			Limit 4;
		]]>
	</select>

	<select id="rutinRE" resultType="hashMap">
		<![CDATA[
			select
			mb.mbti AS mbti, 
		    a.itemName,
		    a.location,
		    a.price,
		    a.ratingAvg
			from Item a
			join MBTi mb on a.mbti = mb.mbtiId
			where a.Type = "replace" and mb.mbti = #{mbti};
		]]>
	</select>

	<update id="ratingItem">
		<![CDATA[
		update iTemView 
		set viewRating = viewRating +1
		where itemId = #{itemId};
		]]>
	</update>

	<update id="ratingPost">
		<![CDATA[
		update PostView 
		set viewRating = viewRating+1
		where PostId = #{PostID};
		]]>
	</update>

	<select id="insertPostViewIdx">
	<![CDATA[
		select max(PostID)
		from Post;
		]]>
	</select>

	<select id="insertItemViewIdx">
		<![CDATA[
			select max(itemId)
			from Item;
		]]>
	</select>

</mapper>